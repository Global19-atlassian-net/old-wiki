= Storing & Managing Collections = 

Capturing conversations and ideas on storing and managing collections in memcached:

----
2008/11

From: Alex Kwiatkowski on the [http://groups.google.com/group/memcached/t/bc90d6489a161c5b mailing list]

I have been looking at storing lists more efficiently and have looked at the
following post
http://lists.danga.com/pipermail/memcached/2007-July/004578.html as
suggested in the FAQ. From the tests that I have done it seems that it's not
efficient to store all lists like this. I can see how it would be beneficial
for large lists that have all items accessed regularly so that the list and
items in the list don't get evicted. But for small lists it seems like more
effort for little gain. The main problem i see is that you have to iterate
over the list from a multi-get and do a set for any items that have been
evicted. Does anyone have a better way of checking a list for evicted items?
Below is some pseudo code for the way i have implemented my 2 phase get

{{{
keyArray = GET array of keys from cache

IF keyArray NOT NULL
  lstItems = MULTI GET keyArray

  FOR EACH item IN lstItems
     IF item IS NULL
        SET item in cache
     END IF
  END FOR
ELSE
  lstItems = list of items from persistent data store

  FOR EACH item IN lstItems
     ADD key for item INTO keyArray
     STORE item in cache
  END FOR
  STORE keyArray in cache
END IF

RETURN lstItems
}}}